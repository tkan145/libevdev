// cgo -godefs -- -Wall -Werror -static -I/tmp/include /build/linux/types.go | go run mkpost.go
// Code generated by the command above; see README.md. DO NOT EDIT.

//go:build arm && linux
// +build arm,linux

package libevdev

import "golang.org/x/sys/unix"

type InputEvent struct {
	Time  unix.Timeval
	Type  uint16
	Code  uint16
	Value int32
}

type InputId struct {
	Bustype uint16
	Vendor  uint16
	Product uint16
	Version uint16
}

type InputAbsinfo struct {
	Value      int32
	Minimum    int32
	Maximum    int32
	Fuzz       int32
	Flat       int32
	Resolution int32
}

type InputKeymapEntry struct {
	Flags    uint8
	Len      uint8
	Index    uint16
	Keycode  uint32
	Scancode [32]uint8
}

type InputMask struct {
	Type uint32
	Size uint32
	Ptr  uint64
}

const (
	sizeofInputAbsinfo     = 0x18
	sizeofInputId          = 0x8
	sizeofInputKeymapEntry = 0x28
)

const (
	EV_VERSION = 0x10001
)

const (
	EVIOCGVERSION    = 0x80044501
	EVIOCGID         = 0x80084502
	EVIOCGREP        = 0x80084503
	EVIOCSREP        = 0x40084503
	EVIOCGKEYCODE    = 0x80084504
	EVIOCGKEYCODE_V2 = 0x80284504
	EVIOCSKEYCODE    = 0x40084504
	EVIOCSKEYCODE_V2 = 0x40284504
	EVIOCSFF         = 0x402c4580
	EVIOCRMFF        = 0x40044581
	EVIOCGEFFECTS    = 0x80044584
	EVIOCGRAB        = 0x40044590
	EVIOCREVOKE      = 0x40044591
	EVIOCGMASK       = 0x80104592
	EVIOCSMASK       = 0x40104593
	EVIOCSCLOCKID    = 0x400445a0
)

const (
	ID_BUS          = 0x0
	ID_VENDOR       = 0x1
	ID_PRODUCT      = 0x2
	ID_VERSION      = 0x3
	BUS_PCI         = 0x1
	BUS_ISAPNP      = 0x2
	BUS_USB         = 0x3
	BUS_HIL         = 0x4
	BUS_BLUETOOTH   = 0x5
	BUS_VIRTUAL     = 0x6
	BUS_ISA         = 0x10
	BUS_I8042       = 0x11
	BUS_XTKBD       = 0x12
	BUS_RS232       = 0x13
	BUS_GAMEPORT    = 0x14
	BUS_PARPORT     = 0x15
	BUS_AMIGA       = 0x16
	BUS_ADB         = 0x17
	BUS_I2C         = 0x18
	BUS_HOST        = 0x19
	BUS_GSC         = 0x1a
	BUS_ATARI       = 0x1b
	BUS_SPI         = 0x1c
	BUS_RMI         = 0x1d
	BUS_CEC         = 0x1e
	BUS_INTEL_ISHTP = 0x1f
)

const (
	MT_TOOL_FINGER = 0x0
	MT_TOOL_PEN    = 0x1
	MT_TOOL_PALM   = 0x2
	MT_TOOL_DIAL   = 0xa
	MT_TOOL_MAX    = 0xf
)

const (
	FF_STATUS_STOPPED = 0x0
	FF_STATUS_PLAYING = 0x1
	FF_STATUS_MAX     = 0x1
)

type FFRelay struct {
	Length uint16
	Delay  uint16
}

type FFTrigger struct {
	Button   uint16
	Interval uint16
}

type FFEnvelop struct {
	Attack_length uint16
	Attack_level  uint16
	Fade_length   uint16
	Fade_level    uint16
}

type FFConstantEffect struct {
	Level    int16
	Envelope FFEnvelop
}

type FFRampEffect struct {
	Start_level int16
	End_level   int16
	Envelope    FFEnvelop
}

type FFConditionEffect struct {
	Right_saturation uint16
	Left_saturation  uint16
	Right_coeff      int16
	Left_coeff       int16
	Deadband         uint16
	Center           int16
}

type FFPeriodicEffect struct {
	Waveform  uint16
	Period    uint16
	Magnitude int16
	Offset    int16
	Phase     uint16
	Envelope  FFEnvelop
	Len       uint32
	Data      *int16
}

type FFRumbleEffect struct {
	Strong_magnitude uint16
	Weak_magnitude   uint16
}

type FFEffect struct {
	Type      uint16
	Id        int16
	Direction uint16
	Trigger   FFTrigger
	Replay    FFRelay
	Pad_cgo_0 [2]byte
	U         [28]byte
}

const (
	FF_RUMBLE       = 0x50
	FF_PERIODIC     = 0x51
	FF_CONSTANT     = 0x52
	FF_SPRING       = 0x53
	FF_FRICTION     = 0x54
	FF_DAMPER       = 0x55
	FF_INERTIA      = 0x56
	FF_RAMP         = 0x57
	FF_EFFECT_MIN   = 0x50
	FF_EFFECT_MAX   = 0x57
	FF_SQUARE       = 0x58
	FF_TRIANGLE     = 0x59
	FF_SINE         = 0x5a
	FF_SAW_UP       = 0x5b
	FF_SAW_DOWN     = 0x5c
	FF_CUSTOM       = 0x5d
	FF_WAVEFORM_MIN = 0x58
	FF_WAVEFORM_MAX = 0x5d
	FF_GAIN         = 0x60
	FF_AUTOCENTER   = 0x61
	FF_MAX_EFFECTS  = 0x60
	FF_MAX          = 0x7f
)
